# Production Docker Compose Override
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  ollama:
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    environment:
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_MAX_LOADED_MODELS=2
    volumes:
      - ollama_data:/root/.ollama
    restart: always

  chromadb:
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chromadb_data:/chroma/chroma
    restart: always

  hilabs-pipeline:
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 4G
          cpus: '2.0'
    environment:
      - LOG_LEVEL=WARNING
      - API_WORKERS=2
      - BATCH_SIZE=32
    volumes:
      - ./data:/app/data:ro
      - ./outputs:/app/outputs
      - pipeline_logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    restart: always
    command: >
      sh -c "
        echo 'Production startup - waiting for services...' &&
        sleep 60 &&
        echo 'Pulling Ollama models...' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\":\"qwen3-embedding:0.6b\"}' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\":\"phi3:mini\"}' &&
        echo 'Installing spaCy model...' &&
        python -m spacy download en_core_web_sm &&
        echo 'Starting production FastAPI server...' &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --workers 2 --log-level warning
      "

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: hilabs-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - hilabs-pipeline
    restart: always
    networks:
      - hilabs-network

volumes:
  ollama_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/hilabs/ollama
  chromadb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/hilabs/chromadb
  pipeline_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/log/hilabs
