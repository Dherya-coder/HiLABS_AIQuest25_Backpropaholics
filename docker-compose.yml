services:
  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/api/v2/heartbeat || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Ollama Service for Local LLM Models
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./models:/models
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - preprocess_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Embeddings Service (FastAPI)
  embeddings:
    build:
      context: ./embeddings
      dockerfile: Dockerfile
    container_name: embeddings_service
    ports:
      - "8002:8000"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - EMBEDDING_MODEL=qwen3-embedding:0.6b
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - preprocess_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Service (FastAPI Orchestrator)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_service
    ports:
      - "8000:8000"
    volumes:
      - ./preprocess:/app/preprocess
      - ./outputs:/app/outputs
      - ./uploads:/app/uploads
    environment:
      - CHROMADB_URL=http://chromadb:8000
      - EMBEDDINGS_SERVICE_URL=http://embeddings:8000
      - OLLAMA_BASE_URL=http://ollama:11434
      - SLM_MODEL=phi3:mini
    depends_on:
      chromadb:
        condition: service_healthy
      embeddings:
        condition: service_healthy
      ollama:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - preprocess_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  chromadb_data:
    driver: local
  ollama_data:
    driver: local

networks:
  preprocess_network:
    driver: bridge
